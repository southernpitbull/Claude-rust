[tool.poetry]
name = "ai-cli-python"
version = "1.0.0"
description = "Python plugin framework for AIrchitect CLI"
authors = ["AIrchitect Team <team@aichitect.com>"]
license = "MIT"
readme = "README.md"
packages = [
    { include = "ai_cli_python" },
    { include = "example_plugin.py" },
    { include = "__init__.py" },
    { include = "__main__.py" },
]

[tool.poetry.dependencies]
python = "^3.9"
pydantic = "^2.4.2"
typing-extensions = "^4.8.0"
requests = "^2.31.0"
click = "^8.1.7"
rich = "^13.6.0"
toml = "^0.10.2"
setuptools = "^68.2.2"
numpy = "^1.24.3"
pandas = "^2.1.1"
pyyaml = "^6.0.1"
aiohttp = "^3.8.5"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-cov = "^4.1.0"
pytest-asyncio = "^0.21.1"
black = "^23.10.1"
flake8 = "^6.1.0"
mypy = "^1.6.1"
isort = "^5.12.0"
pre-commit = "^3.5.0"
jupyter = "^1.0.0"
notebook = "^7.0.6"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
ai-cli-python = "ai_cli_python.__main__:main"

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | target
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["ai_cli_python"]
known_third_party = ["aiohttp", "click", "numpy", "pandas", "pydantic", "pytest", "requests", "rich", "setuptools", "toml", "typing_extensions"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
strict_optional = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --cov=ai_cli_python --cov-report=term-missing"
testpaths = [
    "tests",
]
python_files = [
    "test_*.py",
    "*_test.py",
]
python_classes = [
    "Test*",
    "*Test",
]
python_functions = [
    "test_*",
    "*_test",
]

[tool.coverage.run]
source = ["ai_cli_python"]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/.venv/*",
    "*/__pycache__/*",
    "*setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]